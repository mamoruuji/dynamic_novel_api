// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/dynamic/v1/dynamic.proto

package dynamicv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDynamicData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicId      int32                  `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Overview       string                 `protobuf:"bytes,3,opt,name=overview,proto3" json:"overview,omitempty"`
	UserName       string                 `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	CoverImageName string                 `protobuf:"bytes,5,opt,name=cover_image_name,json=coverImageName,proto3" json:"cover_image_name,omitempty"`
	Tags           []*TagData             `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedTime    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *ListDynamicData) Reset() {
	*x = ListDynamicData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDynamicData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDynamicData) ProtoMessage() {}

func (x *ListDynamicData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDynamicData.ProtoReflect.Descriptor instead.
func (*ListDynamicData) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{0}
}

func (x *ListDynamicData) GetDynamicId() int32 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *ListDynamicData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListDynamicData) GetOverview() string {
	if x != nil {
		return x.Overview
	}
	return ""
}

func (x *ListDynamicData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ListDynamicData) GetCoverImageName() string {
	if x != nil {
		return x.CoverImageName
	}
	return ""
}

func (x *ListDynamicData) GetTags() []*TagData {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListDynamicData) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *ListDynamicData) GetUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

type ListDynamicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchKeywords  []string `protobuf:"bytes,1,rep,name=search_keywords,json=searchKeywords,proto3" json:"search_keywords,omitempty"`
	SortCategory    int32    `protobuf:"varint,3,opt,name=sort_category,json=sortCategory,proto3" json:"sort_category,omitempty"`
	SortOrder       string   `protobuf:"bytes,4,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	FilterKeywords  []string `protobuf:"bytes,5,rep,name=filter_keywords,json=filterKeywords,proto3" json:"filter_keywords,omitempty"`
	FilterStartDate string   `protobuf:"bytes,6,opt,name=filter_start_date,json=filterStartDate,proto3" json:"filter_start_date,omitempty"`
	FilterEndDate   string   `protobuf:"bytes,7,opt,name=filter_end_date,json=filterEndDate,proto3" json:"filter_end_date,omitempty"`
}

func (x *ListDynamicsRequest) Reset() {
	*x = ListDynamicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDynamicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDynamicsRequest) ProtoMessage() {}

func (x *ListDynamicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDynamicsRequest.ProtoReflect.Descriptor instead.
func (*ListDynamicsRequest) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{1}
}

func (x *ListDynamicsRequest) GetSearchKeywords() []string {
	if x != nil {
		return x.SearchKeywords
	}
	return nil
}

func (x *ListDynamicsRequest) GetSortCategory() int32 {
	if x != nil {
		return x.SortCategory
	}
	return 0
}

func (x *ListDynamicsRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

func (x *ListDynamicsRequest) GetFilterKeywords() []string {
	if x != nil {
		return x.FilterKeywords
	}
	return nil
}

func (x *ListDynamicsRequest) GetFilterStartDate() string {
	if x != nil {
		return x.FilterStartDate
	}
	return ""
}

func (x *ListDynamicsRequest) GetFilterEndDate() string {
	if x != nil {
		return x.FilterEndDate
	}
	return ""
}

type ListDynamicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dynamics []*ListDynamicData `protobuf:"bytes,1,rep,name=dynamics,proto3" json:"dynamics,omitempty"`
}

func (x *ListDynamicsResponse) Reset() {
	*x = ListDynamicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDynamicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDynamicsResponse) ProtoMessage() {}

func (x *ListDynamicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDynamicsResponse.ProtoReflect.Descriptor instead.
func (*ListDynamicsResponse) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{2}
}

func (x *ListDynamicsResponse) GetDynamics() []*ListDynamicData {
	if x != nil {
		return x.Dynamics
	}
	return nil
}

type ChapterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId int32       `protobuf:"varint,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Title     string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Order     int32       `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Pages     []*PageData `protobuf:"bytes,4,rep,name=pages,proto3" json:"pages,omitempty"`
	Terms     []*TermData `protobuf:"bytes,5,rep,name=terms,proto3" json:"terms,omitempty"`
}

func (x *ChapterData) Reset() {
	*x = ChapterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterData) ProtoMessage() {}

func (x *ChapterData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterData.ProtoReflect.Descriptor instead.
func (*ChapterData) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{3}
}

func (x *ChapterData) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *ChapterData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChapterData) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ChapterData) GetPages() []*PageData {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *ChapterData) GetTerms() []*TermData {
	if x != nil {
		return x.Terms
	}
	return nil
}

type PageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId   int32          `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Title    string         `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Order    int32          `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Sections []*SectionData `protobuf:"bytes,4,rep,name=sections,proto3" json:"sections,omitempty"`
	Terms    []*TermData    `protobuf:"bytes,5,rep,name=terms,proto3" json:"terms,omitempty"`
}

func (x *PageData) Reset() {
	*x = PageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageData) ProtoMessage() {}

func (x *PageData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageData.ProtoReflect.Descriptor instead.
func (*PageData) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{4}
}

func (x *PageData) GetPageId() int32 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *PageData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PageData) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *PageData) GetSections() []*SectionData {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *PageData) GetTerms() []*TermData {
	if x != nil {
		return x.Terms
	}
	return nil
}

type SectionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionId  int32       `protobuf:"varint,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Order      int32       `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Type       string      `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	FrameColor string      `protobuf:"bytes,5,opt,name=frame_color,json=frameColor,proto3" json:"frame_color,omitempty"`
	Text       string      `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	TextColor  string      `protobuf:"bytes,7,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	TextSize   int32       `protobuf:"varint,8,opt,name=text_size,json=textSize,proto3" json:"text_size,omitempty"`
	Font       string      `protobuf:"bytes,9,opt,name=font,proto3" json:"font,omitempty"`
	Image      *ImageData  `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
	Terms      []*TermData `protobuf:"bytes,11,rep,name=terms,proto3" json:"terms,omitempty"`
}

func (x *SectionData) Reset() {
	*x = SectionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionData) ProtoMessage() {}

func (x *SectionData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionData.ProtoReflect.Descriptor instead.
func (*SectionData) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{5}
}

func (x *SectionData) GetSectionId() int32 {
	if x != nil {
		return x.SectionId
	}
	return 0
}

func (x *SectionData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SectionData) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SectionData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SectionData) GetFrameColor() string {
	if x != nil {
		return x.FrameColor
	}
	return ""
}

func (x *SectionData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SectionData) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *SectionData) GetTextSize() int32 {
	if x != nil {
		return x.TextSize
	}
	return 0
}

func (x *SectionData) GetFont() string {
	if x != nil {
		return x.Font
	}
	return ""
}

func (x *SectionData) GetImage() *ImageData {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *SectionData) GetTerms() []*TermData {
	if x != nil {
		return x.Terms
	}
	return nil
}

type TermData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TermId int32      `protobuf:"varint,1,opt,name=term_id,json=termId,proto3" json:"term_id,omitempty"`
	Name   string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Text   string     `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Order  int32      `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	Image  *ImageData `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *TermData) Reset() {
	*x = TermData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermData) ProtoMessage() {}

func (x *TermData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermData.ProtoReflect.Descriptor instead.
func (*TermData) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{6}
}

func (x *TermData) GetTermId() int32 {
	if x != nil {
		return x.TermId
	}
	return 0
}

func (x *TermData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TermData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TermData) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *TermData) GetImage() *ImageData {
	if x != nil {
		return x.Image
	}
	return nil
}

type TagData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int32  `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path  string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *TagData) Reset() {
	*x = TagData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagData) ProtoMessage() {}

func (x *TagData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagData.ProtoReflect.Descriptor instead.
func (*TagData) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{7}
}

func (x *TagData) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *TagData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TagData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ImageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId int32  `protobuf:"varint,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path    string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ImageData) Reset() {
	*x = ImageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageData) ProtoMessage() {}

func (x *ImageData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageData.ProtoReflect.Descriptor instead.
func (*ImageData) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{8}
}

func (x *ImageData) GetImageId() int32 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *ImageData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetDynamicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicId int32 `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
}

func (x *GetDynamicRequest) Reset() {
	*x = GetDynamicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDynamicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDynamicRequest) ProtoMessage() {}

func (x *GetDynamicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDynamicRequest.ProtoReflect.Descriptor instead.
func (*GetDynamicRequest) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{9}
}

func (x *GetDynamicRequest) GetDynamicId() int32 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

type GetDynamicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicId      int32                  `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Overview       string                 `protobuf:"bytes,3,opt,name=overview,proto3" json:"overview,omitempty"`
	UserId         string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Published      bool                   `protobuf:"varint,5,opt,name=published,proto3" json:"published,omitempty"`
	UserName       string                 `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	CoverImageName string                 `protobuf:"bytes,7,opt,name=cover_image_name,json=coverImageName,proto3" json:"cover_image_name,omitempty"`
	Chapters       []*ChapterData         `protobuf:"bytes,8,rep,name=chapters,proto3" json:"chapters,omitempty"`
	Terms          []*TermData            `protobuf:"bytes,9,rep,name=terms,proto3" json:"terms,omitempty"`
	Tags           []*TagData             `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedTime    *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime    *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *GetDynamicResponse) Reset() {
	*x = GetDynamicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDynamicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDynamicResponse) ProtoMessage() {}

func (x *GetDynamicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDynamicResponse.ProtoReflect.Descriptor instead.
func (*GetDynamicResponse) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{10}
}

func (x *GetDynamicResponse) GetDynamicId() int32 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *GetDynamicResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetDynamicResponse) GetOverview() string {
	if x != nil {
		return x.Overview
	}
	return ""
}

func (x *GetDynamicResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetDynamicResponse) GetPublished() bool {
	if x != nil {
		return x.Published
	}
	return false
}

func (x *GetDynamicResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetDynamicResponse) GetCoverImageName() string {
	if x != nil {
		return x.CoverImageName
	}
	return ""
}

func (x *GetDynamicResponse) GetChapters() []*ChapterData {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *GetDynamicResponse) GetTerms() []*TermData {
	if x != nil {
		return x.Terms
	}
	return nil
}

func (x *GetDynamicResponse) GetTags() []*TagData {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetDynamicResponse) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *GetDynamicResponse) GetUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

type AddDynamicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddDynamicRequest) Reset() {
	*x = AddDynamicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDynamicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDynamicRequest) ProtoMessage() {}

func (x *AddDynamicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDynamicRequest.ProtoReflect.Descriptor instead.
func (*AddDynamicRequest) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{11}
}

func (x *AddDynamicRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddDynamicRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddDynamicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicId int32 `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
}

func (x *AddDynamicResponse) Reset() {
	*x = AddDynamicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDynamicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDynamicResponse) ProtoMessage() {}

func (x *AddDynamicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDynamicResponse.ProtoReflect.Descriptor instead.
func (*AddDynamicResponse) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{12}
}

func (x *AddDynamicResponse) GetDynamicId() int32 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

type DeleteDynamicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicId int32 `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
}

func (x *DeleteDynamicRequest) Reset() {
	*x = DeleteDynamicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDynamicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDynamicRequest) ProtoMessage() {}

func (x *DeleteDynamicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDynamicRequest.ProtoReflect.Descriptor instead.
func (*DeleteDynamicRequest) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteDynamicRequest) GetDynamicId() int32 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

type DeleteDynamicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDynamicResponse) Reset() {
	*x = DeleteDynamicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDynamicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDynamicResponse) ProtoMessage() {}

func (x *DeleteDynamicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDynamicResponse.ProtoReflect.Descriptor instead.
func (*DeleteDynamicResponse) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{14}
}

type UpdateDynamicStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicId int32  `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Overview  string `protobuf:"bytes,3,opt,name=overview,proto3" json:"overview,omitempty"`
	Published bool   `protobuf:"varint,4,opt,name=published,proto3" json:"published,omitempty"`
}

func (x *UpdateDynamicStatusRequest) Reset() {
	*x = UpdateDynamicStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDynamicStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDynamicStatusRequest) ProtoMessage() {}

func (x *UpdateDynamicStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDynamicStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDynamicStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateDynamicStatusRequest) GetDynamicId() int32 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *UpdateDynamicStatusRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateDynamicStatusRequest) GetOverview() string {
	if x != nil {
		return x.Overview
	}
	return ""
}

func (x *UpdateDynamicStatusRequest) GetPublished() bool {
	if x != nil {
		return x.Published
	}
	return false
}

type UpdateDynamicStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDynamicStatusResponse) Reset() {
	*x = UpdateDynamicStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDynamicStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDynamicStatusResponse) ProtoMessage() {}

func (x *UpdateDynamicStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dynamic_v1_dynamic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDynamicStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateDynamicStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{16}
}

var File_proto_dynamic_v1_dynamic_proto protoreflect.FileDescriptor

var file_proto_dynamic_v1_dynamic_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3d,
	0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xff, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x55,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x74,
	0x65, 0x72, 0x6d, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x74, 0x65,
	0x72, 0x6d, 0x73, 0x22, 0xd4, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x6f, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x54,
	0x65, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x72, 0x6d, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x22, 0x48, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x4e, 0x0a, 0x09, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x22,
	0xfd, 0x03, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x30, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x74, 0x65, 0x72,
	0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x42, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x22,
	0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x81, 0x04, 0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6d, 0x6f, 0x72, 0x75, 0x75, 0x6a,
	0x69, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dynamic_v1_dynamic_proto_rawDescOnce sync.Once
	file_proto_dynamic_v1_dynamic_proto_rawDescData = file_proto_dynamic_v1_dynamic_proto_rawDesc
)

func file_proto_dynamic_v1_dynamic_proto_rawDescGZIP() []byte {
	file_proto_dynamic_v1_dynamic_proto_rawDescOnce.Do(func() {
		file_proto_dynamic_v1_dynamic_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dynamic_v1_dynamic_proto_rawDescData)
	})
	return file_proto_dynamic_v1_dynamic_proto_rawDescData
}

var file_proto_dynamic_v1_dynamic_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_dynamic_v1_dynamic_proto_goTypes = []interface{}{
	(*ListDynamicData)(nil),             // 0: proto.dynamic.v1.ListDynamicData
	(*ListDynamicsRequest)(nil),         // 1: proto.dynamic.v1.ListDynamicsRequest
	(*ListDynamicsResponse)(nil),        // 2: proto.dynamic.v1.ListDynamicsResponse
	(*ChapterData)(nil),                 // 3: proto.dynamic.v1.ChapterData
	(*PageData)(nil),                    // 4: proto.dynamic.v1.PageData
	(*SectionData)(nil),                 // 5: proto.dynamic.v1.SectionData
	(*TermData)(nil),                    // 6: proto.dynamic.v1.TermData
	(*TagData)(nil),                     // 7: proto.dynamic.v1.TagData
	(*ImageData)(nil),                   // 8: proto.dynamic.v1.ImageData
	(*GetDynamicRequest)(nil),           // 9: proto.dynamic.v1.GetDynamicRequest
	(*GetDynamicResponse)(nil),          // 10: proto.dynamic.v1.GetDynamicResponse
	(*AddDynamicRequest)(nil),           // 11: proto.dynamic.v1.AddDynamicRequest
	(*AddDynamicResponse)(nil),          // 12: proto.dynamic.v1.AddDynamicResponse
	(*DeleteDynamicRequest)(nil),        // 13: proto.dynamic.v1.DeleteDynamicRequest
	(*DeleteDynamicResponse)(nil),       // 14: proto.dynamic.v1.DeleteDynamicResponse
	(*UpdateDynamicStatusRequest)(nil),  // 15: proto.dynamic.v1.UpdateDynamicStatusRequest
	(*UpdateDynamicStatusResponse)(nil), // 16: proto.dynamic.v1.UpdateDynamicStatusResponse
	(*timestamppb.Timestamp)(nil),       // 17: google.protobuf.Timestamp
}
var file_proto_dynamic_v1_dynamic_proto_depIdxs = []int32{
	7,  // 0: proto.dynamic.v1.ListDynamicData.tags:type_name -> proto.dynamic.v1.TagData
	17, // 1: proto.dynamic.v1.ListDynamicData.created_time:type_name -> google.protobuf.Timestamp
	17, // 2: proto.dynamic.v1.ListDynamicData.updated_time:type_name -> google.protobuf.Timestamp
	0,  // 3: proto.dynamic.v1.ListDynamicsResponse.dynamics:type_name -> proto.dynamic.v1.ListDynamicData
	4,  // 4: proto.dynamic.v1.ChapterData.pages:type_name -> proto.dynamic.v1.PageData
	6,  // 5: proto.dynamic.v1.ChapterData.terms:type_name -> proto.dynamic.v1.TermData
	5,  // 6: proto.dynamic.v1.PageData.sections:type_name -> proto.dynamic.v1.SectionData
	6,  // 7: proto.dynamic.v1.PageData.terms:type_name -> proto.dynamic.v1.TermData
	8,  // 8: proto.dynamic.v1.SectionData.image:type_name -> proto.dynamic.v1.ImageData
	6,  // 9: proto.dynamic.v1.SectionData.terms:type_name -> proto.dynamic.v1.TermData
	8,  // 10: proto.dynamic.v1.TermData.image:type_name -> proto.dynamic.v1.ImageData
	3,  // 11: proto.dynamic.v1.GetDynamicResponse.chapters:type_name -> proto.dynamic.v1.ChapterData
	6,  // 12: proto.dynamic.v1.GetDynamicResponse.terms:type_name -> proto.dynamic.v1.TermData
	7,  // 13: proto.dynamic.v1.GetDynamicResponse.tags:type_name -> proto.dynamic.v1.TagData
	17, // 14: proto.dynamic.v1.GetDynamicResponse.created_time:type_name -> google.protobuf.Timestamp
	17, // 15: proto.dynamic.v1.GetDynamicResponse.updated_time:type_name -> google.protobuf.Timestamp
	9,  // 16: proto.dynamic.v1.DynamicService.GetDynamic:input_type -> proto.dynamic.v1.GetDynamicRequest
	1,  // 17: proto.dynamic.v1.DynamicService.ListDynamics:input_type -> proto.dynamic.v1.ListDynamicsRequest
	11, // 18: proto.dynamic.v1.DynamicService.AddDynamic:input_type -> proto.dynamic.v1.AddDynamicRequest
	13, // 19: proto.dynamic.v1.DynamicService.DeleteDynamic:input_type -> proto.dynamic.v1.DeleteDynamicRequest
	15, // 20: proto.dynamic.v1.DynamicService.UpdateDynamicStatus:input_type -> proto.dynamic.v1.UpdateDynamicStatusRequest
	10, // 21: proto.dynamic.v1.DynamicService.GetDynamic:output_type -> proto.dynamic.v1.GetDynamicResponse
	2,  // 22: proto.dynamic.v1.DynamicService.ListDynamics:output_type -> proto.dynamic.v1.ListDynamicsResponse
	12, // 23: proto.dynamic.v1.DynamicService.AddDynamic:output_type -> proto.dynamic.v1.AddDynamicResponse
	14, // 24: proto.dynamic.v1.DynamicService.DeleteDynamic:output_type -> proto.dynamic.v1.DeleteDynamicResponse
	16, // 25: proto.dynamic.v1.DynamicService.UpdateDynamicStatus:output_type -> proto.dynamic.v1.UpdateDynamicStatusResponse
	21, // [21:26] is the sub-list for method output_type
	16, // [16:21] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_dynamic_v1_dynamic_proto_init() }
func file_proto_dynamic_v1_dynamic_proto_init() {
	if File_proto_dynamic_v1_dynamic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dynamic_v1_dynamic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDynamicData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDynamicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDynamicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDynamicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDynamicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDynamicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDynamicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDynamicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDynamicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDynamicStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dynamic_v1_dynamic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDynamicStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dynamic_v1_dynamic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dynamic_v1_dynamic_proto_goTypes,
		DependencyIndexes: file_proto_dynamic_v1_dynamic_proto_depIdxs,
		MessageInfos:      file_proto_dynamic_v1_dynamic_proto_msgTypes,
	}.Build()
	File_proto_dynamic_v1_dynamic_proto = out.File
	file_proto_dynamic_v1_dynamic_proto_rawDesc = nil
	file_proto_dynamic_v1_dynamic_proto_goTypes = nil
	file_proto_dynamic_v1_dynamic_proto_depIdxs = nil
}
