package server

import (
	"context"
	"log"

	"github.com/bufbuild/connect-go"
	. "github.com/mamoruuji/dynamic_novel_api/config"
	dynamicv1 "github.com/mamoruuji/dynamic_novel_api/gen/proto/dynamic/v1"
	"github.com/mamoruuji/dynamic_novel_api/gen/proto/dynamic/v1/dynamicv1connect" // generated by protoc-gen-connect-go

	. "github.com/mamoruuji/dynamic_novel_api/db/models"
	"github.com/volatiletech/sqlboiler/boil"
	_ "github.com/volatiletech/sqlboiler/v4/queries/qm"
)

type sortServer struct {
	dynamicv1connect.SortServiceHandler
	db boil.ContextExecutor
}

func NewSortServer() *sortServer {
	return &sortServer{
		db: GetDB(),
	}
}

func (s *sortServer) ListSorts(
	ctx context.Context,
	_ *connect.Request[dynamicv1.ListSortsRequest],
) (*connect.Response[dynamicv1.ListSortsResponse], error) {
	sorts, err := TypeOfSorts().All(ctx, s.db)
	if err != nil {
		log.Printf("failed to get sorts: %v", err)
		return nil, err
	}

	var pbSorts []*dynamicv1.SortData
	for _, sort := range sorts {
		pbSort := &dynamicv1.SortData{
			SortId: sort.TypeOfSortID,
			Name:   sort.Name,
		}
		pbSorts = append(pbSorts, pbSort)
	}

	res := connect.NewResponse(&dynamicv1.ListSortsResponse{
		Sorts: pbSorts,
	})

	return res, nil
}
